module.exports = {
    parser: '@typescript-eslint/parser',
    env: {
        browser: true,
        es6: true,
    },
    extends: [
        'airbnb',
        'plugin:@typescript-eslint/recommended',
        'plugin:jest/recommended',
    ],
    globals: {
        Atomics: 'readonly',
        SharedArrayBuffer: 'readonly',
    },
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 2018,
        sourceType: 'module',
    },
    plugins: [
        '@typescript-eslint',
        'jest',
        'react',
        'react-hooks',
        'import',
        'jsx-a11y',
        'simple-import-sort',
    ],
    rules: {
        'react/jsx-uses-react': 'off',
        'react/react-in-jsx-scope': 'off',
        'react/require-default-props': 'off',
        'react/destructuring-assignment': 'off',
        'no-use-before-define': 'off',
        '@typescript-eslint/no-use-before-define': ['error'],
        'no-shadow': 'off',
        '@typescript-eslint/no-shadow': ['error'],
        '@typescript-eslint/indent': [
            'error',
            4,
            {
                SwitchCase: 1,
                ignoredNodes: ['ConditionalExpression'],
            },
        ],
        '@typescript-eslint/ban-ts-comment': 'off',
        '@typescript-eslint/ban-ts-ignore': 'off',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-unused-vars': 'error',
        '@typescript-eslint/no-underscore-dangle': 'off',
        'arrow-parens': 'off',
        'class-methods-use-this': 'off',
        'import/extensions': ['error', 'ignorePackages', {
            js: 'never',
            jsx: 'never',
            ts: 'never',
            tsx: 'never',
        }],
        'import/prefer-default-export': 'off',
        indent: [
            'error',
            4,
            {
                SwitchCase: 1,
                ignoredNodes: ['ConditionalExpression'],
            },
        ],
        'jsx-a11y/label-has-for': 'off',
        'jsx-a11y/label-has-associated-control': 'off',
        'jsx-a11y/media-has-caption': ['warn'],
        'max-len': ['warn', { code: 200 }],
        'no-bitwise': 'off',
        'no-console': 'off',
        'default-param-last': 'off',
        'no-dupe-class-members': 'off',
        'no-underscore-dangle': 'off',
        'no-extra-semi': 'error',
        'no-unused-expressions': 'error',
        'no-multiple-empty-lines': ['error', { max: 2 }],
        'no-unused-vars': 'error',
        'object-curly-newline': ['error', {
            ObjectExpression: { multiline: true, minProperties: 4, consistent: true },
            ObjectPattern: { multiline: true, minProperties: 4, consistent: true },
            ImportDeclaration: { multiline: true, minProperties: 4, consistent: true },
            ExportDeclaration: { multiline: true, minProperties: 4, consistent: true },
        }],
        'object-curly-spacing': ['error', 'always'],
        'react/function-component-definition': ['warn', {
            namedComponents: 'arrow-function',
        }],
        'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
        'react/jsx-indent': ['error', 4],
        'react/jsx-indent-props': ['error', 4],
        'react/jsx-props-no-spreading': 'off',
        'react/forbid-prop-types': 'off',
        'react/state-in-constructor': 'off',
        'react/no-unstable-nested-components': [
            'error',
            { allowAsProps: true },
        ],
        'react/prop-types': 'off',
        semi: ['error', 'always'],
        'simple-import-sort/imports': ['error', {
            groups: [['^\\u0000'], ['^react$'], ['^@?\\w'], ['^@?\\w'], ['^[^.]'], ['^\\.'], ['^.+\\.s?css$']],
        }],
        'sort-imports': 'off',
        'sort-vars': ['error'],
        yoda: 'error',
    },
    settings: {
        'import/resolver': {
            node: {
                extensions: ['.js', '.jsx', '.ts', '.tsx'],
            },
        },
    },
};
module.exports = {
  parser: '@typescript-eslint/parser',
  env: {
    browser: true,
    es6: true,
  },
  extends: [
    'airbnb',
    'plugin:@typescript-eslint/recommended',
    'plugin:jest/recommended',
  ],
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly',
  },
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: 'module',
  },
  plugins: [
    '@typescript-eslint',
    'jest',
    'react',
    'react-hooks',
    'import',
    'jsx-a11y',
    'simple-import-sort',
  ],
  rules: {
    'react/jsx-uses-react': 'off',
    'react/react-in-jsx-scope': 'off',
    'react/require-default-props': 'off',
    'react/destructuring-assignment': 'off',
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['error'],
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': ['error'],
    '@typescript-eslint/indent': [
      'error',
      4,
      {
        SwitchCase: 1,
        ignoredNodes: ['ConditionalExpression'],
      },
    ],
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/ban-ts-ignore': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/no-underscore-dangle': 'off',
    'arrow-parens': 'off',
    'class-methods-use-this': 'off',
    'import/extensions': ['error', 'ignorePackages', {
      js: 'never',
      jsx: 'never',
      ts: 'never',
      tsx: 'never',
    }],
    'import/prefer-default-export': 'off',
    indent: [
      'error',
      4,
      {
        SwitchCase: 1,
        ignoredNodes: ['ConditionalExpression'],
      },
    ],
    'jsx-a11y/label-has-for': 'off',
    'jsx-a11y/label-has-associated-control': 'off',
    'jsx-a11y/media-has-caption': ['warn'],
    'max-len': ['warn', { code: 200 }],
    'no-bitwise': 'off',
    'no-console': 'off',
    'default-param-last': 'off',
    'no-dupe-class-members': 'off',
    'no-underscore-dangle': 'off',
    'no-extra-semi': 'error',
    'no-unused-expressions': 'error',
    'no-multiple-empty-lines': ['error', { max: 2 }],
    'no-unused-vars': 'error',
    'object-curly-newline': ['error', {
      ObjectExpression: { multiline: true, minProperties: 4, consistent: true },
      ObjectPattern: { multiline: true, minProperties: 4, consistent: true },
      ImportDeclaration: { multiline: true, minProperties: 4, consistent: true },
      ExportDeclaration: { multiline: true, minProperties: 4, consistent: true },
    }],
    'object-curly-spacing': ['error', 'always'],
    'react/function-component-definition': ['warn', {
      namedComponents: 'arrow-function',
    }],
    'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
    'react/jsx-indent': ['error', 4],
    'react/jsx-indent-props': ['error', 4],
    'react/jsx-props-no-spreading': 'off',
    'react/forbid-prop-types': 'off',
    'react/state-in-constructor': 'off',
    'react/no-unstable-nested-components': [
      'error',
      { allowAsProps: true },
    ],
    'react/prop-types': 'off',
    semi: ['error', 'always'],
    'simple-import-sort/imports': ['error', {
      groups: [['^\\u0000'], ['^react$'], ['^@?\\w'], ['^@?\\w'], ['^[^.]'], ['^\\.'], ['^.+\\.s?css$']],
    }],
    'sort-imports': 'off',
    'sort-vars': ['error'],
    yoda: 'error',
  },
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
  },
};
